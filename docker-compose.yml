services:
  frontend:
    container_name: chat-frontend
    build: ./frontend
    ports:
      - "4000:4000"
    depends_on:
      - backend
  postgres:
    container_name: chat_postgres
    image: postgres:10.12
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "chat"]
      timeout: 30s
      interval: 10s
      retries: 3
    restart: always
    ports:
      - "5432:5432"
    expose:
      - "5432"
    environment:
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "POSTGRES_DB=${POSTGRES_DB}"
    volumes:
    # can't be white space between the colon and value after
      - pg_data:/var/lib/postgresql/data/
  backend:
    container_name: app
    build: .
    ports:
      - "8000:8000"
    depends_on: 
      - postgres
      - scylla
  #   # restart: on-failure
  scylla:
    container_name: scylla
    # image: scylladb/scylla
    image: cassandra:3.10
    ports:
      - "9042:9042"
    volumes:
      - scylla_data:/var/lib/scylladb/data/
    mem_limit: 2g
    healthcheck:
      test: cqlsh
      interval: 30s
      timeout: 10s
      start_period: 80s
      retries: 3
    # environment: 
    #   - CASSANDRA_LISTEN_ADDRESS: scylla

    # otel-collector:
    #   image: "otel/opentelemetry-collector-dev:latest"
    #   volumes:
    #     - ./otel-collector-config.yaml:/etc/otel/config.yaml
    #   ports:
    #     - "1888:1888" # pprof extension
    #     - "8888:8888" # Prometheus metrics exposed by the collector
    #     - "8889:8889" # Prometheus exporter metrics
    #     - "13133:13133" # health_check extension
    #     - "4317:4317" # OTLP gRPC receiver
    #     - "55670:55679" # zpages extension
    #     - "9411:9411"
    #     - "55678-55680:55678-55680"
volumes:
  pg_data:
  scylla_data: